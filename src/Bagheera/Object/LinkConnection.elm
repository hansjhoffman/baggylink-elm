-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Bagheera.Object.LinkConnection exposing (..)

import Bagheera.Object
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


edges :
    SelectionSet decodesTo Bagheera.Object.LinkEdge
    -> SelectionSet (Maybe (List (Maybe decodesTo))) Bagheera.Object.LinkConnection
edges object____ =
    Object.selectionForCompositeField "edges" [] object____ (Basics.identity >> Decode.nullable >> Decode.list >> Decode.nullable)


{-| Information to aid in pagination
-}
pageInfo :
    SelectionSet decodesTo Bagheera.Object.PageInfo
    -> SelectionSet decodesTo Bagheera.Object.LinkConnection
pageInfo object____ =
    Object.selectionForCompositeField "pageInfo" [] object____ Basics.identity


{-| A count of the total number of objects in this connection, ignoring pagination. This allows a
client to fetch the first five objects by passing "5" as the argument to "first", then fetch
the total count so it could display "5 of 83", for example.
-}
totalCount : SelectionSet (Maybe Int) Bagheera.Object.LinkConnection
totalCount =
    Object.selectionForField "(Maybe Int)" "totalCount" [] (Decode.int |> Decode.nullable)
