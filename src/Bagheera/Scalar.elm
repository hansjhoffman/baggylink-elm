-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Bagheera.Scalar exposing (Codecs, Id(..), LinkId(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode
import Json.Encode as Encode


type Id
    = Id String


type LinkId
    = LinkId String


defineCodecs :
    { codecId : Codec valueId
    , codecLinkId : Codec valueLinkId
    }
    -> Codecs valueId valueLinkId
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueId valueLinkId
    ->
        { codecId : Codec valueId
        , codecLinkId : Codec valueLinkId
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder :
    (RawCodecs valueId valueLinkId -> Codec getterValue)
    -> Codecs valueId valueLinkId
    -> getterValue
    -> Graphql.Internal.Encode.Value
unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueId valueLinkId
    = Codecs (RawCodecs valueId valueLinkId)


type alias RawCodecs valueId valueLinkId =
    { codecId : Codec valueId
    , codecLinkId : Codec valueLinkId
    }


defaultCodecs : RawCodecs Id LinkId
defaultCodecs =
    { codecId =
        { encoder = \(Id raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Id
        }
    , codecLinkId =
        { encoder = \(LinkId raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map LinkId
        }
    }
